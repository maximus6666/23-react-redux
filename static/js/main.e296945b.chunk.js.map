{"version":3,"sources":["img/general.jpg","img/kenobi.jpg","img/postImg.jpg","redux/reducers.js","store.js","components/PostForm.js","redux/actions.js","icons/comment.svg","icons/heart.svg","icons/repost.svg","icons/share.svg","icons/verified.svg","icons/down-chevron.svg","components/Post.js","components/PostsList.js","App.js","reportWebVitals.js","index.js"],"names":["date","Date","initialState","posts","authorId","content","image","toLocaleString","postImg","authors","id","name","photo","nickname","generalImg","kenobiImg","store","createStore","state","action","type","payload","window","__REDUX_DEVTOOLS_EXTENSION__","PostForm","useState","setAuthorId","postContent","setPostContent","setPostImg","className","value","onChange","event","target","placeholder","onClick","post","dispatch","Post","props","getState","author","find","item","parseInt","src","alt","verifyed","chevron","comments","reposts","heart","share","connect","map","index","key","reverse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e296945b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/general.abc5f4ee.jpg\";","export default __webpack_public_path__ + \"static/media/kenobi.7beee588.jpg\";","export default __webpack_public_path__ + \"static/media/postImg.f532d6c4.jpg\";","import generalImg from \"../img/general.jpg\";\r\nimport kenobiImg from \"../img/kenobi.jpg\";\r\nimport postImg from \"../img/postImg.jpg\"\r\n\r\nconst date = new Date();\r\nconst initialState = {\r\n  posts: [\r\n    {\r\n      authorId: 1,\r\n      content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n      image:\"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\r\n      date: date.toLocaleString(),\r\n    },\r\n    {\r\n      authorId: 2,\r\n      content: \"Hello there...\",\r\n      image: postImg,\r\n      date: date.toLocaleString(),\r\n    },\r\n\r\n  ],\r\n  authors:[\r\n    {\r\n      id: 1,\r\n      name: \"Anakin Skywalker\",\r\n      photo: \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n      nickname: \"@dart_vader\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"General Grievous\",\r\n      photo: generalImg,\r\n      nickname: \"@gen_gr\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Obi-Wan Kenobi\",\r\n      photo: kenobiImg,\r\n      nickname: \"@master_K\"\r\n    }\r\n\r\n  ],\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_POST\":\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload]\r\n      }\r\n\r\n    default:return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport {reducer} from \"./redux/reducers\"\r\n\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\n);\r\n\r\nexport default store;\r\n","import {React, useState} from 'react';\r\nimport store from '../store';\r\nimport {addPost} from \"../redux/actions\";\r\n\r\nconst PostForm = () => {\r\n\tconst [authorId, setAuthorId] = useState(1);\r\n\tconst [postContent, setPostContent] = useState(\"\");\r\n\tconst [postImg, setPostImg] = useState(\"\");\r\n\r\n  const addPostHandle = () => {\r\n    store.dispatch(addPost(\r\n      {\r\n        authorId: authorId,\r\n        content: postContent,\r\n        image: postImg,\r\n        date: new Date().toLocaleString()\r\n      }\r\n    ));\r\n    setPostContent(\"\");\r\n    setPostImg(\"\");\r\n  }\r\n\r\n\treturn(\r\n\t\t<div className=\"add-post-form\">\r\n\t\t\t<select value={authorId} onChange={(event) => setAuthorId(event.target.value)}>\r\n\t\t\t\t<option value={1}>Anakin</option>\r\n\t\t\t\t<option value={2}>Kenobi</option>\r\n\t\t\t\t<option value={3}>Grievous</option>\r\n\t\t\t</select>\r\n\t\t\t<input value={postContent} \r\n\t\t\t\t\t\t onChange={(event) => setPostContent(event.target.value)}\r\n\t\t\t\t\t\t type=\"text\"\r\n             placeholder=\"Enter post text\"\r\n      >\r\n\t\t\t</input>\r\n\t\t\t<input value={postImg} \r\n\t\t\t\t\t\t onChange={(event) => setPostImg(event.target.value)} \r\n\t\t\t\t\t\t type=\"text\"\r\n             placeholder=\"Enter post image src\"\r\n      >\r\n\t\t\t</input>\r\n\t\t\t<button \r\n        className=\"add-post-btn\"\r\n        onClick={addPostHandle}\r\n\t\t\t>Add Post\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostForm;\r\n","export const addPost = (post) => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n        payload:{...post},\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/comment.dad8eb65.svg\";","export default __webpack_public_path__ + \"static/media/heart.0bbdf847.svg\";","export default __webpack_public_path__ + \"static/media/repost.9472069f.svg\";","export default __webpack_public_path__ + \"static/media/share.83c76f3e.svg\";","export default __webpack_public_path__ + \"static/media/verified.fd71834f.svg\";","export default __webpack_public_path__ + \"static/media/down-chevron.8bf5daa8.svg\";","import React from 'react';\r\nimport \"../styles.css\";\r\nimport comments from \"../icons/comment.svg\";\r\nimport heart from \"../icons/heart.svg\";\r\nimport reposts from \"../icons/repost.svg\";\r\nimport share from \"../icons/share.svg\";\r\nimport verifyed from \"../icons/verified.svg\";\r\nimport chevron from \"../icons/down-chevron.svg\";\r\nimport store from '../store'\r\n\r\nconst Post = ( props ) => {\r\n\r\n  const state = store.getState();\r\n  const {authorId, date, content, image } = props;\r\n  const author = state.authors.find(item => item.id === parseInt(authorId));\r\n  \r\n\treturn (\r\n    <div className=\"post\">\r\n      <div className=\"author-panel\">\r\n        <div className=\"author-info-block\">\r\n          <img src={author.photo} className=\"author-photo\" alt='author'/>\r\n          <div className=\"text-wrapper\">\r\n            <div className=\"post-info\">\r\n              <span className=\"author-name\">{author.name}</span>\r\n              <img src={verifyed} alt=\"verifyed\"/>\r\n              <span className=\"author-nickname\">{author.nickname}</span>\r\n              <span className=\"post-date\">{date}</span>\r\n            </div>\r\n            <span className=\"post-content\">{content}</span>\r\n          </div>\r\n        </div>\r\n        <img className=\"chevron\" src={chevron} alt=\"arow\"/>\r\n      </div>\r\n      <div className=\"post-img-block\">\r\n        <img className=\"post-img\" src={image} alt=\"post-img\"/>\r\n        <div className=\"icons-block\">\r\n          <div className=\"comments\">\r\n            <img src={comments} alt=\"coments\"/>\r\n            <span>482</span>\r\n          </div>\r\n          <div className=\"reposts\">\r\n            <img src={reposts} alt=\"reposts\"/>\r\n            <span>125</span>\r\n          </div>\t\t\t\t\r\n          <div className=\"heart\">\r\n            <img src={heart} alt=\"heart\"/>\r\n            <span>345</span>\r\n          </div>\t\t\t\r\n          <div className=\"share\">\r\n            <img src={share} alt=\"share\"/>\r\n          </div>\t\t\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import { connect } from \"react-redux\";\r\nimport Post from \"./Post.js\";\r\n\r\nconst PostsList = ( {posts} ) => {\r\n\r\n\treturn (\r\n\t\t(posts.map(((item, index) => <Post {...item} key={index}/>))).reverse()\r\n\t)\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn { \r\n\t\tposts: state.posts\r\n\t\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostsList)\r\n","import './App.css';\r\nimport PostForm from './components/PostForm';\r\nimport PostsList from './components/PostsList';\r\n\r\nconst App = () => (\r\n    <div className=\"night-mode\">\r\n      <PostForm></PostForm>\r\n      <PostsList/>\r\n    </div>\r\n  );\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}